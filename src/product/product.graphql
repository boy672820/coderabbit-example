type Product {
  id: ID!
  name: String!
  description: String!
  price: Float!
  stock: Int!
  createdAt: String!
  updatedAt: String!
}

input CreateProductInput {
  name: String!
  description: String!
  price: Float!
  stock: Int!
}

input ProductFilterInput {
  name: String
  minPrice: Float
  maxPrice: Float
  inStock: Boolean
}

input PaginationInput {
  page: Int = 1
  limit: Int = 10
}

type ProductsResponse {
  items: [Product!]!
  total: Int!
  page: Int!
  limit: Int!
  hasMore: Boolean!
}

type Query {
  products(filter: ProductFilterInput, pagination: PaginationInput): ProductsResponse!
  product(id: Int!): Product
}

type Mutation {
  createProduct(input: CreateProductInput!): Product!
}